// Copyright (C) 2014 Lymia Aluysia <lymiahugs@gmail.com>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is furnished
// to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

raw +margins "|(Nyuroki Magical Fantasy #esoteric version by Lymia Aluysia
              | Released under the terms of MIT license
              |
              | Source code at http:/" raw +margins "/github.com/Lymia/JoustExt/blob/master/examples/nyuroki-esoteric.jx
              |
              | This bot is pretty simple, really, despite its long code. It rushes to position 8, and starts setting
              | up decoys. If it sees an already set cell when it's setting up its decoys, it go straight to its clear
              | loop. Otherwise, it sets up some more decoys like a traditional slow rush, and then jumps straight to
              | cell 14-- assuming that smaller tapes would be caught during the decoy setting checks.
              | 
              | The actual clear loop isn't very special. It checks the cell twice to deal with stuff like anticipation
              | and stealth, then does an offset clear of size 10. In the two-cycle clear, if after 500 cycles, the
              | cell is still not cleared, it assumes it's being locked and switches to an opposite polarity five-cycle
              | clear. If it still isn't clear, assume we're being locked off the flag. The clear loop leaves behind
              | size 1 decoy.)*0
              |
              |"

@rushbody($count) {
  if($count > 0) {
    (
      >
      ([(-)*20 raw "([+{}" [-.-+]+ @rushbody($count - 1) raw "])%500"])*2
      +
    )*$count
  }
}
@rush() { @rushbody(21) }

 (>)*8
 [       @rush()](+)*5
<[      >@rush()](-)*5
<[     >>@rush()](+)*5
<[    >>>@rush()](-)*5
<[   >>>>@rush()](+)*51
<[  >>>>>@rush()](-)*50
<[ >>>>>>@rush()](-)*50
<[>>>>>>>@rush()](+)*50
<(-)*(128-109) // Change our home flag to throw off simpler bots.
>>>>
>(-)*20
>(+)*20
>(-)*20
>(+)*20
(>)*4 // violate rule of 9
@rush()
